package com.tyss.library.management.librarymanagement.controller;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.tyss.library.management.librarymanagement.dto.UserInfo;
import com.tyss.library.management.librarymanagement.dto.UserResponse;
import com.tyss.library.management.librarymanagement.service.AdminService;
@CrossOrigin(origins="*",allowedHeaders="*",allowCredentials="true")
@RestController
@RequestMapping("admin")
public class AdminController {
	@Autowired
private AdminService ad;
//	@PostMapping(path="/register",produces=MediaType.APPLICATION_JSON_VALUE,consumes=MediaType.APPLICATION_JSON_VALUE)
//	public void registerUser(@RequestBody UserInfo userInfo) {
//		System.out.println(userInfo.getUserEmail());
//		String to=userInfo.getUserEmail();
//		String subject = "your password for library management system login";
//		String body = "Welcome Mr/Ms "+userInfo.getUserName().toUpperCase()+"."+" Your Email Id is "+userInfo.getUserEmail()+" and your password is : "+userInfo.getUserPassword()+ ".  It is an autogenerated mail..Please do not Reply..";
//		ad.registerUser(userInfo,to,subject,body);
//		System.out.println("mail sent");
//	}
	 
	@GetMapping(path="/login",produces=MediaType.APPLICATION_JSON_VALUE)
	@ResponseBody
	public UserInfo loginUser(@RequestParam("userName") String name,@RequestParam("password") String password){
		System.out.println("username..."+name);
		System.out.println("password...."+password);
		UserInfo user=ad.login(name, password);
		System.out.println("--------------------------");
		System.out.println("Username..:"+user.getName());
		System.out.println("UserPasword..:"+user.getPassword());
		System.out.println("UserEmail..:"+user.getEmail());
		return user;
	}
	@GetMapping(path="/getallusers",produces=MediaType.APPLICATION_JSON_VALUE)
	public  UserResponse getAllUser() {
		List<UserInfo> user=ad.getAllUser();
		UserResponse response=new UserResponse();
		if(user==null) {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("No data Found");
		}else
		{
			response.setStatusCode(200);
			response.setMessage("Success");
			response.setDescription("Data Found");
			response.setUsers(Arrays.asList(user));

			
		}
		return response;
	}
	
	@PostMapping(path="/add",produces=MediaType.APPLICATION_JSON_VALUE,
			consumes = MediaType.APPLICATION_JSON_VALUE)
	
	public UserResponse registerUser(@RequestBody UserInfo user) 
	{
		System.out.println(user.getEmail());
		String to=user.getEmail();
		String subject = "your password for library management system login";
		String body = "Welcome Mr/Ms "+user.getName().toUpperCase()+"."+" Your Email Id is "+user.getEmail()+" and your password is : "+user.getPassword()+ ".  It is an autogenerated mail..Please do not Reply..";
		ad.registerUser(user,to,subject,body);
		System.out.println("mail sent");
		UserResponse response=new UserResponse();
		if(ad.registerUser(user,to,subject,body)) {
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription("Data MOdified");
		}else
		{
			response.setStatusCode(401);
			response.setMessage("failure");
			response.setDescription("no data modified");

		}
		return response;

	}
	@PutMapping(path="/modify",produces=MediaType.APPLICATION_JSON_VALUE,
			consumes = MediaType.APPLICATION_JSON_VALUE)
	public UserResponse updateUser(UserInfo user) {

		UserResponse response=new UserResponse();
		if(ad.updateUser(user)) {
			response.setStatusCode(201);
			response.setMessage("success");
			response.setDescription("Data MOdified");
		}else
		{
			response.setStatusCode(401);
			response.setMessage("failure");
			response.setDescription("no data modified");

		}
		return response;
	}


	@DeleteMapping(path="/remove/{email}",produces=MediaType.APPLICATION_JSON_VALUE)
	public UserResponse deleteUser(@PathVariable("email")String email) {
		List<UserInfo> user=ad.getAllUser();
		UserResponse response=new UserResponse();
		if(user==null) {
			response.setStatusCode(401);
			response.setMessage("Failure");
			response.setDescription("No data Found");
		}else
		{
			response.setStatusCode(200);
			response.setMessage("Success");
			response.setDescription("Data Found");
			response.setUsers(Arrays.asList(user));

		}
		return response;

	}

	
}
